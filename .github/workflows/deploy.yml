name: CI/CD for Transcription Model

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11.0"

      # Install dependencies and run tests
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run unit tests
        run: |
          pytest tests/

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build and push Docker image
      - name: Build and push Docker image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          REPOSITORY_URI=<ECR-REPOSITORY-URI>
          docker build -t $REPOSITORY_URI:${IMAGE_TAG} .
          docker push $REPOSITORY_URI:${IMAGE_TAG}
      - name: Output Docker image URI
        run: 'echo "Image URI: $REPOSITORY_URI:${IMAGE_TAG}"'

  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure kubectl
      - name: Set up kubectl
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name <EKS-CLUSTER-NAME>

      # Deploy to EKS
      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml